library(tidyr)
library(ggplot2)
###############################
library(stR)
library(forecast)
airp_l = AirPassengers
ahh = stats::stl(airp_l,12)
png("Motivation/Airline_NoCovid.PNG",width = 600,height = 500)
plot(airp_l,
     xlab = "",
     ylab = "",
     main = "",
     cex=1.75,cex.axis = 1.4,cex.main = 1.5,lwd = 2)
title(ylab = "Number of Passengers (in Thousands)",cex.lab = 1.75,line = 2.5)
title(xlab = "Date",cex.lab = 1.75,line = 2.5)
dev.off()
png("Motivation/Airline_NoCovid_STL.PNG",width = 600,height = 500)
autoplot(ahh)
dev.off()

obj = fit_BASTION(y = AirPassengers,
                  Ks = list(12))


################################
air<- read.table("Data/air traffic.csv",dec = ",",header = TRUE,sep = ",")
passenger = as.numeric(air$Int_Pax)/1000000
datess = lubridate::as_date(paste0(air$Year,"-",air$Month,"-1"))

travel_ban = datess[which(datess == lubridate::as_date("2020-04-01"))]
saveRDS(BASTION_air, file = "BASTION_air.RDS")
BASTION_air = readRDS("BASTION_air.RDS")


#source: https://www.kaggle.com/datasets/yyxian/u-s-airline-traffic-data?resource=download
# title:
#Number of International Travels in the U.S.
#(Monthly) \n Jan. 2003 and Sep. 2023
png(paste0(folder_path,"Airline_BASTION.PNG"),
    width = figure_width, height = figure_height)

folder_path = "Figures/Airline/"
path = paste0(folder_path)
plot_BASTION <- function(BASTIONobj,Ks,x,ylab,path){
  ##################
  cex_s = 2             # Point size
  cex.axis_s_y = 1.5       # Y-axis text size
  cex.axis_s_x = 1.2       # X-axis text size
  cex.main_s = 1.5         # Main title text size
  cex.lab_s = 1.5         # Axis label text size
  lwd_s = 3              # Line width
  figure_width = 500       # Width
  figure_height = 300      # Reduced height to compact space
  margin_size = c(4, 4, 0.5, 1.5)  # Reduced margins: bottom, left, top, right
  ####################
  # number of plots
  n_p = ncol(BASTIONobj$summary$p_means)
  y = BASTIONobj$summary$p_means$y
  Trend_mean= BASTIONobj$summary$p_means$Trend
  Trend_upper = BASTIONobj$summary$Trend_sum$CR_upper
  Trend_lower = BASTIONobj$summary$Trend_sum$CR_lower
  ylim_s = c(floor(min(c(min(y),min(Trend_mean)))),
             ceiling(max(c(max(y),max(Trend_mean)))))
  ####################
  # Plot the observations
  #Observations
  png(paste0(path,"observed.PNG"),
      width = figure_width, height = figure_height)
  par(mar = margin_size)
  plot(y = y, 
       x = x,
       type = "p",
       xlab = "",
       ylab = "",
       main = "",
       cex = cex_s, 
       cex.axis = cex.axis_s_x, 
       cex.main = cex.main_s,
       axes = FALSE,
       ylim = ylim_s)
  axis(2,cex.axis = cex.axis_s_y)
  axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
       labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
       cex.axis = cex.axis_s_x)
  title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
  dev.off()
  
  png(paste0(path,"Trend.PNG"),
      width = figure_width, height = figure_height)
  par(mar = margin_size)
  plot(y = Trend_mean, 
       x = x,
       type = "l",
       xlab = "",
       ylab = "",
       main = "",
       lwd = lwd_s,
       cex.axis = cex.axis_s_x, 
       cex.main = cex.main_s,
       axes = FALSE,
       ylim =ylim_s)
  axis(2,cex.axis = cex.axis_s_y)
  axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
       labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
       cex.axis = cex.axis_s_x)
  title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
  x_coords <- 1:length(Trend_mean)  # X-coordinates
  polygon(c(x, rev(x)), 
          c(Trend_upper, 
            rev(Trend_lower)), 
          col = "grey", border = NA)
  lines(y = Trend_mean,
        x = x, type = "l", lwd =lwd_s)
  dev.off()
  
  #Seasonality
  for(k in Ks){
    png(paste0(path,"Seasonality_",k,".PNG"),
        width = figure_width, height = figure_height)
    par(mar = margin_size)
    df_sea = BASTIONobj$summary[[paste0("Seasonal",k,"_sum")]]
    ylim_s = c(floor(min(df_sea$CR_lower)),ceiling(max(df_sea$CR_upper)))
    plot(y = df_sea$Mean, 
         x = x,
         type = "l",
         xlab = "",
         ylab = "",
         main = "",
         lwd = lwd_s,
         cex.axis = cex.axis_s_x, 
         cex.main = cex.main_s,
         axes = FALSE,
         ylim = ylim_s)
    axis(2,cex.axis = cex.axis_s_y)
    axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
         labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
         cex.axis = cex.axis_s_x)
    title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
    x_coords <- 1:length(Trend_mean)  # X-coordinates
    polygon(c(x, rev(x)), 
            c(df_sea$CR_upper, 
              rev(df_sea$CR_lower)), 
            col = "grey", border = NA)
    lines(y = df_sea$Mean,
          x = x, type = "l", lwd =lwd_s)
    dev.off()
  }
  # Remainder
  png(paste0(path,"remainder.PNG"),
      width = figure_width, height = figure_height)
  par(mar = margin_size)
  plot(y = BASTIONobj$summary$p_means$Remainder, 
       x = x,
       type = "p",
       xlab = "",
       ylab = "",
       main = "",
       cex = cex_s, 
       cex.axis = cex.axis_s_x, 
       cex.main = cex.main_s,
       axes = FALSE,
       ylim = c(floor(min(BASTIONobj$summary$p_means$Remainder)),
                ceiling(max(BASTIONobj$summary$p_means$Remainder))))
  axis(2,cex.axis = cex.axis_s_y)
  axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
       labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
       cex.axis = cex.axis_s_x)
  title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
  dev.off()
}
plot_BASTION(BASTION_air,list(12),x = datess,"Passengers (in Millions)",
             path)

passenger_ts <- forecast::msts(passenger, seasonal.periods=12)
#TBATs
TBATS = forecast::tbats(passenger_ts,
                        use.trend = FALSE,
                        seasonal.periods = 12)
TBATScomp = forecast::tbats.components(TBATS)
#STR
STR = stR::AutoSTR(passenger_ts,robust = TRUE,confidence = 0.95)
#MSTL
MSTL = forecast::mstl(passenger_ts)

#################
cex_s = 2             # Point size
cex.axis_s_y = 1.5       # Y-axis text size
cex.axis_s_x = 1.2       # X-axis text size
cex.main_s = 1.5         # Main title text size
cex.lab_s = 1.5         # Axis label text size
lwd_s = 3              # Line width
figure_width = 500       # Width
figure_height = 300      # Reduced height to compact space
margin_size = c(4, 4, 0.5, 1.5)  # Reduced margins: bottom, left, top, right
#########
y = BASTIONobj$summary$p_means$y
STR_trend = STR$output$predictors[[1]]$data
STR_upper = STR$output$predictors[[1]]$upper
STR_lower = STR$output$predictors[[1]]$lower
TBATS_trend = as.numeric(TBATScomp[,"level"])
MSTL_trend = as.numeric(MSTL[,"Trend"])
BASTION_trend = as.numeric(BASTION_air$summary$p_means$Trend)
BASTION_upper = BASTIONobj$summary$Trend_sum$CR_upper
BASTION_lower = BASTIONobj$summary$Trend_sum$CR_lower
###################

ylim_s = c(floor(min(c(STR_lower,TBATS_trend,
                       MSTL_trend,BASTION_lower,y))),
           ceiling(max(c(STR_upper,TBATS_trend,
                         MSTL_trend,BASTION_upper,y))))
######################
path = "Figures/Airline/"
idx = 162:length(y)
#2016 to 2023
png(paste0(path,"TBATS_trend.PNG"),
    width = figure_width, height = figure_height)
par(mar = margin_size)
plot(y = y[idx], 
     x = x[idx],
     type = "p",
     xlab = "",
     ylab = "",
     main = "",
     cex = cex_s, 
     cex.axis = cex.axis_s_x, 
     cex.main = cex.main_s,
     axes = FALSE,
     ylim = ylim_s)
axis(2,cex.axis = cex.axis_s_y)
axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
     labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
     cex.axis = cex.axis_s_x)
title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
lines(y = TBATS_trend,
      x = x, type = "l", lwd =lwd_s)
dev.off()

png(paste0(path,"MSTL_trend.PNG"),
    width = figure_width, height = figure_height)
par(mar = margin_size)
plot(y = y[idx], 
     x = x[idx],
     type = "p",
     xlab = "",
     ylab = "",
     main = "",
     cex = cex_s, 
     cex.axis = cex.axis_s_x, 
     cex.main = cex.main_s,
     axes = FALSE,
     ylim = ylim_s)
axis(2,cex.axis = cex.axis_s_y)
axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
     labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
     cex.axis = cex.axis_s_x)
title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
lines(y = MSTL_trend,
      x = x, type = "l", lwd =lwd_s)
dev.off()

png(paste0(path,"STR_trend.PNG"),
    width = figure_width, height = figure_height)
par(mar = margin_size)
plot(y = y[idx], 
     x = x[idx],
     type = "p",
     xlab = "",
     ylab = "",
     main = "",
     cex = cex_s, 
     cex.axis = cex.axis_s_x, 
     cex.main = cex.main_s,
     axes = FALSE,
     ylim = ylim_s)
axis(2,cex.axis = cex.axis_s_y)
axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
     labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
     cex.axis = cex.axis_s_x)
title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
x_coords <- 1:length(Trend_mean)  # X-coordinates
polygon(c(x, rev(x)), 
        c(STR_upper, 
          rev(STR_lower)), 
        col = "grey", border = NA)
lines(y = STR_trend,
      x = x, type = "l", lwd =lwd_s)
dev.off()

png(paste0(path,"BASTION_trend.PNG"),
    width = figure_width, height = figure_height)
par(mar = margin_size)
plot(y = y[idx], 
     x = x[idx],
     type = "p",
     xlab = "",
     ylab = "",
     main = "",
     cex = cex_s, 
     cex.axis = cex.axis_s_x, 
     cex.main = cex.main_s,
     axes = FALSE,
     ylim = ylim_s)
axis(2,cex.axis = cex.axis_s_y)
axis(1, at = x[seq(1, length(x), length.out = 6)],     # x-axis with tick marks
     labels = format(x[seq(1, length(x), length.out = 6)], "%Y-%m"),
     cex.axis = cex.axis_s_x)
title(ylab = ylab, cex.lab = cex.lab_s, line = 2.5)
x_coords <- 1:length(Trend_mean)  # X-coordinates
polygon(c(x, rev(x)), 
        c(BASTION_upper, 
          rev(BASTION_lower)), 
        col = "grey", border = NA)
lines(y = BASTION_trend,
      x = x, type = "l", lwd =lwd_s)
dev.off()
########################################



